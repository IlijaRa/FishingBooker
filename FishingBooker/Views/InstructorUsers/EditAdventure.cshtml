@model FishingBooker.Models.EditAdventureViewModel

@{
    ViewBag.Title = "EditAdventure";
    Layout = "~/Views/Shared/_LayoutInstructor.cshtml";
    int adventureId = (int)ViewData["AdventureId"];
    string MapSource = (string)ViewData["MapSource"];
    MapSource = "\"" + MapSource + "\"";
}

<h2>Edit adventure</h2>


@using (Html.BeginForm("EditAdventure", "InstructorUsers", FormMethod.Post))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Change information about your adventure</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    @Html.HiddenFor(model => model.adventure.AdventureId, new { @class = "id" })

    @*<div class="form-group">
            @Html.LabelFor(model => model.AdventureId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AdventureId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AdventureId, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.adventure.Title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.adventure.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.adventure.Title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.adventure.Street, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.adventure.Street, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.adventure.Street, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.adventure.AddressNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.adventure.AddressNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.adventure.AddressNumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.adventure.City, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.adventure.City, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.adventure.City, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.adventure.PromotionDescription, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.adventure.PromotionDescription, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.adventure.PromotionDescription, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.adventure.BehaviourRules, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.adventure.BehaviourRules, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.adventure.BehaviourRules, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.adventure.AdditionalServices, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.adventure.AdditionalServices, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.adventure.AdditionalServices, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.adventure.Pricelist, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.adventure.Pricelist, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.adventure.Pricelist, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.adventure.Price, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.adventure.Price, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.adventure.Price, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.adventure.MaxNumberOfPeople, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.adventure.MaxNumberOfPeople, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.adventure.MaxNumberOfPeople, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.adventure.FishingEquipment, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.adventure.FishingEquipment, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.adventure.FishingEquipment, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.adventure.CancellationPolicy, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.RadioButtonFor(model => model.adventure.CancellationPolicy, value: "ForFree") For free
            @Html.ValidationMessageFor(model => model.adventure.CancellationPolicy, "", new { @class = "text-danger" })
            <br />
            @Html.RadioButtonFor(model => model.adventure.CancellationPolicy, value: "Suspension10") Suspension 10%
            @Html.ValidationMessageFor(model => model.adventure.CancellationPolicy, "", new { @class = "text-danger" })
            <br />
            @Html.RadioButtonFor(model => model.adventure.CancellationPolicy, value: "Suspension20") Suspension 20%
            @Html.ValidationMessageFor(model => model.adventure.CancellationPolicy, "", new { @class = "text-danger" })
            <br />
            @Html.RadioButtonFor(model => model.adventure.CancellationPolicy, value: "Suspension30") Suspension 30%
            @Html.ValidationMessageFor(model => model.adventure.CancellationPolicy, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.adventure.Biography, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.adventure.Biography, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.adventure.Biography, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>

}

<h2>Fast reservations</h2>
@Html.ActionLink("Create reservation", "CreateReservation", "InstructorUsers", new { AdventureId = adventureId }, null);
<table class="table">
    <tr>
        <th>Place</th>
        <th>Start date</th>
        <th>Start time</th>
        <th>Duration</th>
        <th>Max number of people</th>
        <th>Additional services</th>
        <th>Price</th>
        <th>Is reserved?</th>
    </tr>

    @foreach (var item in Model.fast_reservations)
    {
<tr>
    @*<td>
            @Html.DisplayFor(modelItem => item.UserId)
        </td>*@
    @Html.HiddenFor(modelItem => item.Id)
    <td>
        @Html.DisplayFor(modelItem => item.Place)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.StartDate)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.StartTime)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Duration)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.MaxNumberOfPeople)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.AdditionalServices)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Price)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.IsReserved)
    </td>
    <td>
    <td>
        @Html.ActionLink(
            "Delete",
            "DeleteFastReservation",
            "InstructorUsers",
            new
                 {
                advId = adventureId,
                reservationId = item.Id
                },
            null
        )
    </td>
    </td>
</tr>
    }

</table>

<!--<h2 style="background-color: #CCCCCC; color: #333333; text-align: center;">You can see our location here</h2>
<fieldset>
    <legend style="font-family: arial; color: #333333; font-size: large;"></legend>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>

    <div id="map" style="width:100%;height:500px"></div>
    <script>

        function myMap() {
            var mapCanvas = document.getElementById("map");
            var mapOptions = {
                center: new google.maps.LatLng(20.296100, 85.824500),
                zoom: 18,
                mapTypeId: google.maps.MapTypeId.HYBRID
            };
            var map = new google.maps.Map(mapCanvas, mapOptions);
        }
    </script>

    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBjf80OnyVrHoYZ2QKDWm7q8VN8bIrxS58&callback=myMap"></script>

</fieldset>
<footer>
    <p style="background-color: #CCCCCC; color: #333333; text-align: center;">© @DateTime.Now.ToLocalTime()</p>--> @*Add Date Time*@
<!--</footer>-->

<div class="mapouter">
    <div class="gmap_canvas">
        <iframe width="100%" height="500" id="gmap_canvas" src=MapSource frameborder="0" scrolling="no" marginheight="0" marginwidth="0"></iframe><a href="https://fmovies-online.net">fmovies</a><br>
        <style>
            .mapouter {
                position: relative;
                text-align: right;
                height: 500px;
                width: 100%;
            }
        </style><a href="https://www.embedgooglemap.net">google maps embed iframe</a>
        <style>
            .gmap_canvas {
                overflow: hidden;
                background: none !important;
                height: 500px;
                width: 100%;
            }
        </style>
    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
