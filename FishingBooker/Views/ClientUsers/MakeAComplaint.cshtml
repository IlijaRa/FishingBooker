@model FishingBooker.Models.ClientComplaintViewModel

@{
    ViewBag.Title = "MakeAComplaint";
    Layout = "~/Views/Shared/_LayoutClient.cshtml";
    //var actionTitles = (List<string>)ViewBag.data;


    //SelectList selectList = null;

    //List<SelectListItem> listTitleItems = new List<SelectListItem>();

    //foreach (var title in actionTitles)
    //{
    //    listTitleItems.Add(new SelectListItem
    //    {
    //        Text = title,
    //        Value = title
    //    });
    //}
    //selectList = new SelectList(listTitleItems, "Value", "Text");

}

<h2>Make a complaint</h2>

@using (Html.BeginForm("MakeAComplaint", "ClientUsers", FormMethod.Post)) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>ClientComplaintViewModel</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.OwnerName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.OwnerName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.OwnerName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.OwnerSurname, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.OwnerSurname, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.OwnerSurname, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.OwnerEmailAddress, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.OwnerEmailAddress, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.OwnerEmailAddress, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ActionTitles, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.ValidationMessageFor(model => model.ActionTitles, "", new { @class = "text-danger" })
            @Html.DropDownListFor(model => model.ActionTitles, new SelectList(Model.ActionTitles, "Value", "Text"), new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Reason, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Reason, new { htmlAttributes = new { @class = "form-control" }, rows = 7, cols = 40 })
            @Html.ValidationMessageFor(model => model.Reason, "", new { @class = "text-danger" })
        </div>
    </div>    

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Send" class="btn btn-default" />
        </div>
    </div>
    
    </div>
}

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
